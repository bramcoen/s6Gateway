on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

#Deploy Docker repository
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images:  ${{ secrets.Image_Name }}
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}

    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
       username: ${{ secrets.DOCKER_USERNAME }}
       password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.Image_Name }}:${{ steps.vars.outputs.sha_short }}, ${{ secrets.Image_Name }}:latest
        labels: ${{ steps.meta.outputs.labels }}

#Deploy Kubernetes
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_CLUSTER }}

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/deployment
      
    - name: Restart pods in deployment
      run: kubectl rollout restart deploy ${{ secrets.Kubernetes_Deployment }}
