on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      #- name: Install cosign
      #  if: github.event_name != 'pull_request'
      #  uses: sigstore/cosign-installer@d6a3abf1bdea83574e28d40543793018b6035605
      #  with:
      #    cosign-release: 'v1.7.1'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      #- name: Setup Docker buildx
      #  uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action


      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images:  ${{ secrets.Image_Name }}
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
    - name: Check outputs
      run: echo ${{ steps.vars.outputs.sha_short }}
      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
    - name: Log into registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
       username: ${{ secrets.DOCKER_USERNAME }}
       password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.0.0
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ secrets.Image_Name }}:${{ steps.vars.outputs.sha_short }}, ${{ secrets.Image_Name }}:latest
        labels: ${{ steps.meta.outputs.labels }}

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
    #- name: Sign the published Docker image
    #  if: ${{ github.event_name != 'pull_request' }}
    ##  env:
    #    COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
    #  run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    #- name: Remove compose yml file
    #  run: rm $GITHUB_WORKSPACE/docker-compose.yml || true
    #- name: Update deployment file
    #  run: sed -i 's|<IMAGE>|'${{ secrets.Image_Name }}':'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_CLUSTER }}

    - name: Deploy to DigitalOcean Kubernetes
      run: kubectl apply -f $GITHUB_WORKSPACE/deployment

    #- name: Verify deployment
   # run: kubectl rollout status ${{ secrets.Image_Name }}
